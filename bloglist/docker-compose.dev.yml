services:
  frontend:
    image: bloglist-frontend
    build:
      context: ./frontend # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: bloglist-frontend # This will name the container
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./backend/mongo_data:/data/db
    container_name: bloglist-mongo
  backend:
    image: bloglist-backend
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    ports:
      - 3003:3003
    volumes:
      - ./backend:/usr/src/app
    environment:
      - MONGODB_URI=mongodb://the_username:the_password@mongo:27017/the_database
      - SECRET=fs022sekret
    container_name: bloglist-backend
    depends_on:
      - mongo
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - frontend
      - backend
